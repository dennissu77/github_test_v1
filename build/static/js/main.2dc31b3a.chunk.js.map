{"version":3,"sources":["compomt/card_test_2.jsx","header.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","PATIENT","category","price","stocked","name","Clock","props","state","date","Date","count","this","timerID","setInterval","gettemperture","clearInterval","setState","data","React","Component","RecipeReviewCard","classes","useState","expanded","setExpanded","Card","className","CardHeader","Avatar","aria-label","action","IconButton","title","subheader","CardContent","Typography","variant","component","CardActions","disableSpacing","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","ClippedDrawer","CssBaseline","AppBar","position","Toolbar","noWrap","Drawer","paper","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","Divider","ListItemLink","to","Grid","container","item","xs","sm","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2dc31b3a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\n// //-----------icon----------------------------------------\r\n// //加按鈕\r\n// import AddCircleIcon from '@material-ui/icons/AddCircle';\r\n// import AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n// //病人躺床上\r\n// import AirlineSeatFlatIcon from '@material-ui/icons/AirlineSeatFlat';\r\n// //線圖\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\n\r\n\r\n\r\n//-----------------------------------\r\n// CardHeader   card標頭\r\n// CardMedia    媒體\r\n// CardContent  內容\r\n// CardActions  動作\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  //頭像\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\n//病人個資  PATIENT\r\n//patient    問題:怎麼分辨category是哪一行  一二三四行怎區分\r\nconst PATIENT = [\r\n  {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},\r\n  {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\r\n  {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\r\n  {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\r\n  {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\r\n  {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}\r\n];\r\n\r\n// console.log(\"PATIENTy 資料內容：\",PATIENT)\r\n// console.log(\"PATIENTy 第0個陣列[0]\",PATIENT[0])\r\n// console.log(\"PATIENTy 第1個陣列[1]\",PATIENT[1])\r\n\r\n// const datatest=\"測試資料\";\r\n\r\n\r\n//改變的資料用prprs給進來  setInterval設刷新時間\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date() ,\r\n      count:0\r\n    };\r\n  }\r\n  //每當 Clock render 到 DOM 的時\r\n  componentDidMount() {\r\n    //開始計時\r\n    this.timerID = setInterval(() => this.gettemperture(),1000);\r\n  }\r\n  //每當產生的 Clock DOM 被移除時\r\n  componentWillUnmount() {\r\n    //給結果\r\n    clearInterval(this.timerID);\r\n  }\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  gettemperture(){\r\n    // // console.log(\"取得溫度\",this.state.count)s\r\n    // //打一個if 上他不要超過上限 5\r\n    // if (this.state.count >= 5) {\r\n    //   this.setState({\r\n    //     count : 0\r\n    //   });\r\n    // } else {\r\n    //   this.setState({\r\n    //     count : this.state.count+1\r\n    //   });\r\n    // }\r\n    // //,PATIENT[this.state.count]\r\n    // // console.log(\"取得溫度：\",PATIENT[this.state.count].price)\r\n    // console.log(\"測試\",this.props.data.price)\r\n    // console.log(\"\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* toLocaleTimeString?? */}\r\n        {/* <p>526 {this.props.patient.price}</p> */}\r\n\r\n        {/* <span>{this.props.data[this.state.count].price}</span> */}\r\n\r\n        &nbsp;\r\n        <span>{this.props.data.price}</span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          &nbsp;&nbsp;\r\n        <span>{this.props.data.name}</span>\r\n\r\n        {/* <h2>資料： {this.state.date.toLocaleTimeString()}.</h2> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default function RecipeReviewCard() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  //cardhader-----------\r\n  //Avatar 頭像\r\n  //action\r\n  //title      大標\r\n  //subheader  小標\r\n  //CardMedia  圖片\r\n\r\n  //IconButton 包著iconsvg 製造陰影的包裝\r\n\r\n  //Typography??\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          // 頭像\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n                {/* 右上按鈕 */}\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"病人姓名\"\r\n        subheader=\"September 14, 2016\"\r\n      />\r\n      {/* 圖片 */}\r\n      {/* <CardMedia\r\n        className={classes.media}\r\n        //圖片連結\r\n        image=\"/static/images/cards/paella.jpg\"\r\n        //滑鼠移到上面會出現\r\n        title=\"Paella dish\"\r\n      ></CardMedia> */}\r\n      {/* 內容 */}\r\n      <CardContent>\r\n        {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"> */}\r\n        <Typography variant=\"body2\"  component=\"p\">\r\n          This impressive paella is a perfect party dish and a fun meal to cook together with your\r\n          guests.\r\n        </Typography>\r\n\r\n        {/* 變化資料的function */}&nbsp;\r\n        <h1>體溫  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;心率 </h1>\r\n\r\n        <div>\r\n\r\n            {/* 傳入第一個陣列的值 */}\r\n            <Clock data={PATIENT[0]}/>\r\n\r\n\r\n            {/* products傳入一個物件 */}\r\n            {/* <FilterableProductTable products={PRODUCTS} /> */}\r\n        </div>\r\n        {/* ------------------------*/}\r\n\r\n      </CardContent>\r\n      {/* 底下按鈕 ACTION */}\r\n      <CardActions disableSpacing>\r\n        {/*  加到最愛按鈕 */}\r\n        <IconButton aria-label=\"add to favorites\">\r\n          {/* <FavoriteIcon /> */}\r\n          <ShowChartIcon></ShowChartIcon>\r\n        </IconButton>\r\n        {/*  分享按鈕 */}\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 下拉看表單</p>\r\n        {/*  展開式內容按鈕 */}\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n\r\n        </IconButton>\r\n      </CardActions>\r\n      {/* --------------------- */}\r\n\r\n      {/* 展開的文章內容 改變expanded展開或合起來 */}\r\n\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>個人資料:</Typography>\r\n          <Typography paragraph>\r\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\r\n            minutes.\r\n          </Typography>\r\n\r\n          <Typography paragraph>\r\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\r\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\r\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\r\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\r\n            minutes more. (Discard any mussels that don’t open.)\r\n          </Typography>\r\n          <Typography>\r\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\n//icon\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n//網格系統\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n//路由\r\n// import Routerone from './road.js';\r\n\r\n//卡片\r\nimport RecipeReviewCard from './compomt/card_test_2.jsx';\r\n// import MaterialTableDemo from './compomt/_table_3';\r\n\r\n// //-----------icon----------------------------------------\r\n// //加按鈕\r\n// import AddCircleIcon from '@material-ui/icons/AddCircle';\r\n// import AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n// //病人躺床上\r\n// import AirlineSeatFlatIcon from '@material-ui/icons/AirlineSeatFlat';\r\n// //線圖\r\n// import ShowChartIcon from '@material-ui/icons/ShowChart';\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,//theme給值\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),//theme給值\r\n  },\r\n}));\r\n\r\n\r\n//================寫抓資料function\r\n\r\n\r\n//==========把資料寫成state timer計時改變 舊clock的東西搬過來\r\nexport default function ClippedDrawer() {\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      {/* ?? */}\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            醫療監控站\r\n          </Typography>\r\n          {/* api有甚麼 */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* 左邊抽屉 ----------------------------------- */}\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        {/* Drawer 抽屜 */}\r\n        <Toolbar />\r\n        {/* 在這裡Toolber是加空間用的 */}\r\n\r\n        {/* 左邊的list ListItemIcon??  ListItemText?? */}\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            {['生理訊息監控', '訊息通知', '歷史紀錄', '釘選病人'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <SettingsIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          {/* 列表分隔線 */}\r\n          <Divider />\r\n          <List>\r\n            {['帳號登入', '設定', '元件上線狀況'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n                <ListItemIcon>\r\n                  {/* {console.log(\"2626\",index,\"\",text) } */}\r\n\r\n\r\n                  {/* index是甚麼 */}\r\n                  {index  === 1 ? <InboxIcon /> : <MailIcon />}\r\n                  {/* {  if (index === 0) {\r\n                       return  <InboxIcon />\r\n                      } else {\r\n                        result = 'NOT positive';\r\n                      }} */}\r\n                  {/* {index  === 1 ? <InboxIcon /> : <MailIcon />}\r\n                  {index  === 2 ? <InboxIcon /> : <MailIcon />}\r\n                  {index  === 3 ? <InboxIcon /> : <MailIcon />} */}\r\n                  {/* <SettingsIcon/> */}\r\n                  {/* <InboxIcon /> */}\r\n                </ListItemIcon>\r\n\r\n                <ListItemText primary={text} />\r\n                {/* SettingsIcon */}\r\n              </ListItem>\r\n            ))}\r\n              {/* 轉網址link --------------*/}\r\n              {/* <Link to=\"/users\">Users</Link> */}\r\n              <ListItemLink to=\"/spam\" primary=\"Spam\" />\r\n              {/* <ListItemLink href=\"/about\">\r\n                  <ListItemText primary=\"Spam\" />\r\n              </ListItemLink> */}\r\n\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n      {/* 主要頁面 */}\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n\r\n\r\n\r\n        <Grid container spacing={5}>\r\n              <Grid item xs={0} sm={1}/>\r\n              <Grid item xs={12} sm={3} >\r\n                  <RecipeReviewCard/>\r\n              </Grid>\r\n              <Grid item xs={12} sm={3} >\r\n                  <RecipeReviewCard/>\r\n              </Grid>\r\n              <Grid item xs={12} sm={3} >\r\n                  <RecipeReviewCard/>\r\n              </Grid>\r\n              {/* <Grid item xs={0} sm={2}/> */}\r\n          </Grid>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <Grid container spacing={5}>\r\n              <Grid item xs={0} sm={1}/>\r\n              <Grid item xs={12} sm={3} >\r\n                  <RecipeReviewCard/>\r\n              </Grid>\r\n              <Grid item xs={12} sm={3} >\r\n                  <RecipeReviewCard/>\r\n              </Grid>\r\n              <Grid item xs={12} sm={3} >\r\n                  <RecipeReviewCard/>\r\n              </Grid>\r\n              {/* <Grid item xs={0} sm={2}/> */}\r\n          </Grid>\r\n\r\n        {/* <Typography paragraph>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\r\n          ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\r\n          facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\r\n          gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\r\n          donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\r\n          adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\r\n          Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\r\n          imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\r\n          arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\r\n          donec massa sapien faucibus et molestie ac.\r\n          這裡要放病人card  先做病人card\r\n        </Typography>\r\n        <p>156</p>\r\n        <Typography paragraph>\r\n          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\r\n          facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\r\n          tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\r\n          consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\r\n          vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\r\n          hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\r\n          tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\r\n          nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\r\n          accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\r\n        </Typography> */}\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={0} sm={2}/>\r\n\r\n            <Grid item xs={12} sm={6} >\r\n                this is Grid this is Grid this is Grid this is Gridv this is Grid this is Grid this is Grid this is Grid\r\n                this is Grid this is Grid this is Grid this is Gridv this is Grid this is Grid this is Grid this is Grid\r\n                this is Grid this is Grid this is Grid this is Gridv this is Grid this is Grid this is Grid this is Grid\r\n                this is Grid this is Grid this is Grid this is Gridv this is Grid this is Grid this is Grid this is Grid\r\n            </Grid>\r\n\r\n            <Grid item xs={0} sm={2}/>\r\n        </Grid>\r\n\r\n\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n//元件==============================\nimport ClippedDrawer from './header';\n// import PrimarySearchAppBar from './compomt/_search';\n// import LetterAvatars from './compomt/_avater.js';\n// import SimplePortal from './compomt/_changecontent';\n// import AccessibleTabs from './compomt/_changepage';\n// import StickyHeadTable from './compomt/_table';\n// import CollapsibleTable from './compomt/_table_2';\n// import MaterialTableDemo from './compomt/_table_3';\n\n//路由\n// import Routerone from './road.js';\n\n\n\n\nfunction App() {\n  return (\n    <div >\n      {/* 路由---------------------- */}\n      {/* <Routerone></Routerone> */}\n      {/* header 加左邊選單----------- */}\n      <ClippedDrawer></ClippedDrawer>\n      {/* 搜尋欄     放header裡------------------ */}\n      {/* <PrimarySearchAppBar></PrimarySearchAppBar> */}\n\n      {/* 頭像------------------ */}\n      {/* <LetterAvatars></LetterAvatars> */}\n      {/* 改變內容 ------------------*/}\n      {/* <SimplePortal></SimplePortal> */}\n\n      {/* 換頁鈕 吧 */}\n      {/* <AccessibleTabs></AccessibleTabs> */}\n\n      {/* 基本表格 */}\n      {/* <StickyHeadTable></StickyHeadTable> */}\n\n      {/* 可伸展表格 */}\n      {/* <CollapsibleTable></CollapsibleTable> */}\n\n      {/* 可刪減表格  icon不能動作*/}\n      {/* <MaterialTableDemo></MaterialTableDemo> */}\n\n\n      <p>156</p>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}